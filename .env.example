# ============================================
# JudgeFinder Platform - Environment Variables
# ============================================
# Copy this to .env.local for local development
# All production values are configured in Netlify
# ============================================
#
# VARIABLE STATUS LEGEND:
# [REQUIRED] - Must be set for application to run
# [OPTIONAL] - Can be omitted, feature will be disabled
# [RECOMMENDED] - Should be set for production
# ============================================

# ------------------------------
# Database Configuration (Supabase)
# ------------------------------
# Get these from: https://app.supabase.com/project/_/settings/api
# [REQUIRED] Supabase project URL - used for all database connections
NEXT_PUBLIC_SUPABASE_URL=https://YOUR_PROJECT_ID.supabase.co

# [REQUIRED] Supabase anonymous key - used for client-side queries with RLS
NEXT_PUBLIC_SUPABASE_ANON_KEY=YOUR_ANON_KEY_HERE

# [REQUIRED] Supabase service role key - DANGER: bypasses RLS, server-side only
# NEVER expose this in client-side code or commit to version control
# NOTE: Use sparingly - prefer service account client for most backend operations
SUPABASE_SERVICE_ROLE_KEY=YOUR_SERVICE_ROLE_KEY_HERE

# [REQUIRED] Supabase JWT secret - used to sign service account tokens
# Get from: https://app.supabase.com/project/_/settings/api (scroll to JWT Secret)
# Used by lib/supabase/service-account.ts for authenticated backend operations
SUPABASE_JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long

# ------------------------------
# Authentication (Clerk)
# ------------------------------
# Get these from: https://dashboard.clerk.com
# [REQUIRED] Clerk publishable key - safe for client-side use
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=YOUR_CLERK_PUBLISHABLE_KEY_HERE

# [REQUIRED] Clerk secret key - server-side only, never expose publicly
CLERK_SECRET_KEY=YOUR_CLERK_SECRET_KEY_HERE

# [OPTIONAL] Clerk URL configuration - defaults shown below
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/welcome

# ------------------------------
# AI Services
# ------------------------------
# [OPTIONAL] OpenAI API key - used as fallback for AI analytics
# Get from: https://platform.openai.com/api-keys
# Format must start with 'sk-'
OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE

# [RECOMMENDED] Google AI (Gemini) API key - primary AI provider for analytics
# Get from: https://makersuite.google.com/app/apikey
# More cost-effective than OpenAI for most operations
GOOGLE_AI_API_KEY=YOUR_GOOGLE_AI_API_KEY_HERE

# ------------------------------
# External APIs
# ------------------------------
# [REQUIRED] CourtListener API key - fetches judicial data and case information
# Get from: https://www.courtlistener.com/help/api/
# Rate limits: 5000 requests/hour with valid key
COURTLISTENER_API_KEY=YOUR_COURTLISTENER_API_KEY_HERE

# CourtListener API Configuration (fine-tuning)
# [OPTIONAL] Base delay between API requests in milliseconds (default: 1000)
COURTLISTENER_REQUEST_DELAY_MS=1000

# [OPTIONAL] Maximum retry attempts for failed requests (default: 5)
COURTLISTENER_MAX_RETRIES=5

# [OPTIONAL] Request timeout in milliseconds (default: 30000)
COURTLISTENER_REQUEST_TIMEOUT_MS=30000

# [OPTIONAL] Maximum backoff delay when retrying (default: 15000)
COURTLISTENER_BACKOFF_CAP_MS=15000

# [OPTIONAL] Circuit breaker error threshold (default: 5)
COURTLISTENER_CIRCUIT_THRESHOLD=5

# [OPTIONAL] Circuit breaker cooldown period in milliseconds (default: 60000)
COURTLISTENER_CIRCUIT_COOLDOWN_MS=60000

# ------------------------------
# Cache & Rate Limiting (Upstash Redis)
# ------------------------------
# Get from: https://console.upstash.com/
# [REQUIRED] Upstash Redis REST URL - used for rate limiting and caching
UPSTASH_REDIS_REST_URL=https://YOUR_UPSTASH_INSTANCE.upstash.io

# [REQUIRED] Upstash Redis REST token - authentication for Redis operations
UPSTASH_REDIS_REST_TOKEN=AYourUpstashTokenHere

# ------------------------------
# Payment Processing (Stripe)
# ------------------------------
# Get from: https://dashboard.stripe.com/apikeys
# [REQUIRED] Stripe secret key for server-side payment processing
# Use test key (sk_test_) for development, live key (sk_live_) for production
STRIPE_SECRET_KEY=YOUR_STRIPE_SECRET_KEY_HERE

# [REQUIRED] Stripe publishable key for client-side checkout
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=YOUR_STRIPE_PUBLISHABLE_KEY_HERE

# [REQUIRED] Stripe webhook signing secret - validates webhook events
# Get from: https://dashboard.stripe.com/webhooks
# Used to verify webhook signatures for security
STRIPE_WEBHOOK_SECRET=YOUR_STRIPE_WEBHOOK_SECRET_HERE

# [REQUIRED] Stripe Price ID for monthly universal access
# Get from: https://dashboard.stripe.com/products
# Format: price_1Abc123... (starts with 'price_')
# Universal access: $500/month for all courts and judges
STRIPE_PRICE_MONTHLY=YOUR_PRICE_ID_MONTHLY

# [REQUIRED] Stripe Price ID for annual universal access
# Get from: https://dashboard.stripe.com/products
# Format: price_1Abc123... (starts with 'price_')
# Universal access: $5,000/year for all courts and judges (10 months pricing)
STRIPE_PRICE_YEARLY=YOUR_PRICE_ID_YEARLY

# [DEPRECATED] Legacy ad space price ID - use STRIPE_PRICE_MONTHLY instead
# Kept for backward compatibility, will be removed in future version
STRIPE_PRICE_ADSPACE=YOUR_PRICE_ID

# ------------------------------
# Monitoring & Error Tracking (Sentry)
# ------------------------------
# Get from: https://sentry.io/settings/projects/
# [RECOMMENDED] Sentry DSN for server-side error tracking
SENTRY_DSN=https://YOUR_KEY@YOUR_ORG.ingest.sentry.io/YOUR_PROJECT_ID

# [RECOMMENDED] Sentry DSN for client-side error tracking
NEXT_PUBLIC_SENTRY_DSN=https://YOUR_KEY@YOUR_ORG.ingest.sentry.io/YOUR_PROJECT_ID

# [OPTIONAL] Sentry environment identifier
SENTRY_ENVIRONMENT=production

# [OPTIONAL] Sentry release version for tracking
SENTRY_RELEASE=1.0.0

# [OPTIONAL] Sentry auth token for source map uploads during build
SENTRY_AUTH_TOKEN=YOUR_SENTRY_AUTH_TOKEN_HERE

# [OPTIONAL] Sentry performance monitoring sample rates (0.0 to 1.0)
# Controls what percentage of transactions are sent to Sentry
SENTRY_TRACES_SAMPLE_RATE=0.1
SENTRY_PROFILES_SAMPLE_RATE=0.1

# ------------------------------
# Analytics & Tracking
# ------------------------------
# [OPTIONAL] Google Analytics 4 measurement ID
# Get from: https://analytics.google.com/analytics/web/#/a{accountId}w{propertyId}p{viewId}/admin/streams/table/
NEXT_PUBLIC_GA_MEASUREMENT_ID=G-XXXXXXXXXX

# [OPTIONAL] PostHog project API key for product analytics
# Get from: https://app.posthog.com/project/settings
NEXT_PUBLIC_POSTHOG_KEY=phc_YOUR_POSTHOG_PROJECT_KEY_HERE
NEXT_PUBLIC_POSTHOG_HOST=https://app.posthog.com

# ------------------------------
# Site Configuration
# ------------------------------
# [REQUIRED] Public site URL - must match your production domain
# Used for: SEO, sitemaps, canonical URLs, Open Graph tags
# Format: Include protocol (https://) but no trailing slash
NEXT_PUBLIC_SITE_URL=https://judgefinder.io

# [REQUIRED] Application URL - typically same as NEXT_PUBLIC_SITE_URL
NEXT_PUBLIC_APP_URL=https://judgefinder.io

# [OPTIONAL] Application name displayed in UI
NEXT_PUBLIC_APP_NAME=JudgeFinder Platform

# [REQUIRED] Node environment - determines build optimizations
# Values: development | production | test
NODE_ENV=production

# ------------------------------
# Admin Configuration
# ------------------------------
# [REQUIRED] Comma-separated list of Clerk user IDs with admin access
# Get user IDs from: https://dashboard.clerk.com/apps/{app_id}/users
# Example: user_2abc123def,user_2xyz456ghi
ADMIN_USER_IDS=user_YOUR_CLERK_USER_ID_HERE

# ------------------------------
# Internal Security & API Protection
# ------------------------------
# [REQUIRED] API key for internal sync operations
# Generate with: openssl rand -base64 32
# Used to authenticate cron jobs and internal API calls
SYNC_API_KEY=YOUR_RANDOM_32_CHAR_SYNC_API_KEY_HERE

# [REQUIRED] Secret for authenticating scheduled/cron functions
# Generate with: openssl rand -base64 32
# Prevents unauthorized execution of scheduled tasks
CRON_SECRET=YOUR_RANDOM_32_CHAR_CRON_SECRET_HERE

# [REQUIRED in production] Encryption key for sensitive data and service account operations
# Generate with: openssl rand -base64 32
# Used for encrypting sensitive data and signing service account tokens
# CRITICAL: Keep this secret secure - changing it will invalidate encrypted data
ENCRYPTION_KEY=YOUR_RANDOM_32_CHAR_ENCRYPTION_KEY_HERE

# ------------------------------
# SEO & Search Engine Verification
# ------------------------------
# [OPTIONAL] Google Search Console verification code
# Get from: https://search.google.com/search-console
# Instructions: Add property -> HTML tag method
NEXT_PUBLIC_GOOGLE_SITE_VERIFICATION=your-google-verification-code-here

# [OPTIONAL] Bing Webmaster Tools verification code
# Get from: https://www.bing.com/webmasters
# Instructions: Add site -> HTML meta tag method
NEXT_PUBLIC_BING_SITE_VERIFICATION=your-bing-verification-code-here

# ------------------------------
# Feature Flags & Experimental
# ------------------------------
# [OPTIONAL] Enable beta features for testing
ENABLE_BETA_FEATURES=false

# [OPTIONAL] Enable detailed debug logging (verbose)
DEBUG_MODE=false

# [OPTIONAL] Enable maintenance mode (shows maintenance page)
MAINTENANCE_MODE=false
