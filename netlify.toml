# ============================================
# Netlify Configuration - JudgeFinder Platform
# ============================================
# Production deployment configuration for Netlify
# See: https://docs.netlify.com/configure-builds/file-based-configuration/
# ============================================

[build]
  command = "npm run build"
  # NOTE: Do NOT set 'publish' when using @netlify/plugin-nextjs
  # The plugin automatically manages the output directory for Next.js SSR
  # publish = ".next"  # Commented out - managed by Next.js plugin
  # NOTE: Do NOT set 'functions' when using @netlify/plugin-nextjs for API routes
  # The plugin automatically handles Next.js API routes as serverless functions
  # functions = "netlify/functions"  # Only for standalone Netlify functions (scheduled tasks)

[build.environment]
  # Node.js and Build Configuration
  NODE_VERSION = "20"  # Match package.json requirement (^20)
  # Legacy peer dependencies flag for compatibility
  NPM_FLAGS = "--legacy-peer-deps"
  NODE_ENV = "production"

  # IMPORTANT: Set these in Netlify UI (Site settings > Environment variables)
  # ENCRYPTION_KEY - Required for secure data encryption in production
  # STRIPE_PRICE_MONTHLY - Stripe price ID for $500/month universal access
  # STRIPE_PRICE_YEARLY - Stripe price ID for $5,000/year universal access
  # STRIPE_PRICE_ADSPACE - (deprecated) Legacy price ID, use STRIPE_PRICE_MONTHLY

  # Public Environment Variables (safe for client-side, NEXT_PUBLIC_ prefix)
  NEXT_PUBLIC_APP_NAME = "JudgeFinder Platform"
  NEXT_PUBLIC_APP_URL = "https://judgefinder.io"
  NEXT_PUBLIC_CLERK_SIGN_IN_URL = "/sign-in"
  NEXT_PUBLIC_CLERK_SIGN_UP_URL = "/sign-up"
  NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL = "/dashboard"
  NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL = "/welcome"

  # Build Optimizations
  NEXT_TELEMETRY_DISABLED = "1"

  # ============================================
  # SECRETS SCANNING CONFIGURATION (CRITICAL)
  # ============================================
  # Prevent false positives in Netlify's secret scanner
  # These paths and keys are excluded from secret detection

  # Paths to exclude from secret scanning
  # Rationale for each exclusion:
  # - .netlify/**: Netlify internal build artifacts
  # - .next/**: Next.js build output (may contain bundled public keys)
  # - node_modules/**: Third-party dependencies
  # - .git/**: Git repository data
  # - coverage/**: Test coverage reports
  # - out/**, build/**, dist/**: Build artifacts
  # - .cache/**, .parcel-cache/**: Build caches
  # - *.tsbuildinfo: TypeScript incremental compilation info
  # - .eslintcache: ESLint cache
  # - *.log: Log files
  # - reports/**, validation-reports/**: Generated reports
  # - env_verification_report.json: Environment validation output
  # - tests-eslint.json, eslint-report.json: Linting reports
  # - .claude/**: IDE configuration files
  SECRETS_SCAN_OMIT_PATHS = ".netlify/**,.next/**,node_modules/**,.git/**,.cache/**,.parcel-cache/**,.eslintcache,*.tsbuildinfo,tsconfig.tsbuildinfo,coverage/**,out/**,build/**,dist/**,reports/**,validation-reports/**,*.log,logs/**,env_verification_report.json,tests-eslint.json,eslint-report.json,test-results/**,playwright-report/**,.playwright-mcp/**,.claude/**,docs/**,README.md,.env.example,ENV_VARS_REFERENCE.md,START_HERE.md,RECOVERY_CHECKLIST.md,RECOVERY_SUMMARY.md,SECURITY_IMPLEMENTATION_SUMMARY.md"

  # Public keys to exclude from secret scanning
  # Rationale for each exclusion:
  # - NEXT_PUBLIC_* variables: Intentionally public (Next.js convention)
  # - NEXT_PUBLIC_SUPABASE_URL: Public Supabase project URL
  # - NEXT_PUBLIC_SUPABASE_ANON_KEY: Public anonymous key (protected by RLS)
  # - NEXT_PUBLIC_CLERK_*: Public Clerk configuration
  # - NEXT_PUBLIC_SITE_URL, NEXT_PUBLIC_APP_URL: Public URLs
  # - NEXT_PUBLIC_APP_NAME: Public application name
  # - ADMIN_USER_IDS: Clerk user IDs (not sensitive, publicly visible in UI)
  # - NODE_VERSION: Build configuration
  # - NPM_FLAGS: Build configuration
  SECRETS_SCAN_OMIT_KEYS = "NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL,NEXT_PUBLIC_CLERK_SIGN_UP_URL,NEXT_PUBLIC_APP_NAME,NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL,NEXT_PUBLIC_CLERK_SIGN_IN_URL,NEXT_PUBLIC_SITE_URL,NEXT_PUBLIC_APP_URL,NEXT_PUBLIC_SUPABASE_URL,NEXT_PUBLIC_SUPABASE_ANON_KEY,NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY,NEXT_PUBLIC_SENTRY_DSN,NEXT_PUBLIC_GA_MEASUREMENT_ID,NEXT_PUBLIC_POSTHOG_KEY,NEXT_PUBLIC_POSTHOG_HOST,NEXT_PUBLIC_GOOGLE_SITE_VERIFICATION,NEXT_PUBLIC_BING_SITE_VERIFICATION,ADMIN_USER_IDS,NODE_VERSION,NPM_FLAGS,NODE_ENV,NEXT_TELEMETRY_DISABLED,UPSTASH_REDIS_REST_URL,UPSTASH_REDIS_REST_TOKEN,CI"

# ============================================
# Context-Specific Configurations
# ============================================

# Production Context
[context.production]
  command = "npm run build:production"
  [context.production.environment]
    NODE_ENV = "production"

# Deploy Preview Context (PR previews)
[context.deploy-preview]
  command = "npm run build"
  [context.deploy-preview.environment]
    NODE_ENV = "production"
    SECRETS_SCAN_ENABLED = "false"

# Branch Deploy Context
[context.branch-deploy]
  command = "npm run build"
  [context.branch-deploy.environment]
    NODE_ENV = "development"
    SECRETS_SCAN_ENABLED = "false"

# Redirect rules for SEO
[[redirects]]
  from = "/sitemap_index.xml"
  to = "/sitemap.xml"
  status = 301

[[redirects]]
  from = "/sitemap-index.xml"
  to = "/sitemap.xml"
  status = 301

# Headers for security and SEO
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "geolocation=(), microphone=(), camera=(), payment=(), usb=()"

[[headers]]
  for = "/_next/static/css/*"
  [headers.values]
    Content-Type = "text/css; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/sitemap.xml"
  [headers.values]
    Content-Type = "application/xml; charset=utf-8"
    Cache-Control = "public, max-age=3600, s-maxage=3600"

[[headers]]
  for = "/robots.txt"
  [headers.values]
    Content-Type = "text/plain; charset=utf-8"
    Cache-Control = "public, max-age=86400, s-maxage=86400"

# Dynamic routes - no HTML caching to prevent serving stale page data
# These routes use SSR and must fetch fresh data based on URL parameters
[[headers]]
  for = "/judges"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate, s-maxage=0"
    X-Robots-Tag = "index, follow"

# ============================================
# Serverless Functions Configuration
# ============================================

[functions]
  # Function bundler and optimization
  node_bundler = "esbuild"
  external_node_modules = ["@supabase/supabase-js", "@google/generative-ai", "sharp"]

  # Function timeouts (max 26 seconds for standard functions)
  # Background functions can run up to 15 minutes
  [functions.timeout]
    default = 10  # 10 seconds default
    api = 26      # API endpoints can use full 26 seconds

# Scheduled Functions
[functions."submit-sitemap"]
  schedule = "@weekly"

# ============================================
# Post-Processing & Optimization
# ============================================

[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# ============================================
# Plugin Configuration
# ============================================

[[plugins]]
  package = "@netlify/plugin-nextjs"
