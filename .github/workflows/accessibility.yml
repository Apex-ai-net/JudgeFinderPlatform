name: Accessibility Audit

on:
  pull_request:
    paths:
      - 'components/**'
      - 'app/**'
      - 'lib/**'
      - 'tests/a11y/**'
      - '.lighthouserc.json'
      - 'package.json'
  push:
    branches:
      - main
    paths:
      - 'components/**'
      - 'app/**'
      - 'lib/**'
      - 'tests/a11y/**'
      - '.lighthouserc.json'
  workflow_dispatch:

jobs:
  axe-core-tests:
    name: Axe Core Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run accessibility tests
        run: npm run test:a11y

      - name: Generate coverage report
        if: always()
        run: npm run test:coverage -- tests/a11y/

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: accessibility
          name: accessibility-coverage
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let coverage = 'Coverage report not available';
            try {
              const coverageData = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
              const total = coverageData.total;
              coverage = `
              ## Accessibility Test Coverage

              | Metric | Coverage |
              |--------|----------|
              | Lines | ${total.lines.pct}% |
              | Statements | ${total.statements.pct}% |
              | Functions | ${total.functions.pct}% |
              | Branches | ${total.branches.pct}% |
              `;
            } catch (e) {
              console.log('Could not read coverage summary:', e);
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: coverage
            });

  lighthouse-ci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          GOOGLE_AI_API_KEY: ${{ secrets.GOOGLE_AI_API_KEY }}

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.13.x

      - name: Run Lighthouse CI
        run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: .lighthouseci/
          retention-days: 7

      - name: Comment Lighthouse results on PR
        if: github.event_name == 'pull_request' && always()
        uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3

  accessibility-summary:
    name: Accessibility Summary
    runs-on: ubuntu-latest
    needs: [axe-core-tests, lighthouse-ci]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create summary
        uses: actions/github-script@v7
        with:
          script: |
            const axeStatus = '${{ needs.axe-core-tests.result }}';
            const lighthouseStatus = '${{ needs.lighthouse-ci.result }}';

            const getEmoji = (status) => {
              switch(status) {
                case 'success': return '✅';
                case 'failure': return '❌';
                case 'skipped': return '⏭️';
                default: return '⚠️';
              }
            };

            core.summary
              .addHeading('Accessibility Audit Results', 2)
              .addTable([
                [{data: 'Test Suite', header: true}, {data: 'Status', header: true}],
                ['Axe Core Tests', `${getEmoji(axeStatus)} ${axeStatus}`],
                ['Lighthouse CI', `${getEmoji(lighthouseStatus)} ${lighthouseStatus}`]
              ])
              .write();
