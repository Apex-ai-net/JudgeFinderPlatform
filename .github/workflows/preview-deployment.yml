name: Preview Deployment

# Deploy previews for pull requests
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.vscode/**'

env:
  NODE_VERSION: '20'

jobs:
  # Quick validation
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Security scan
        run: bash scripts/verify-build-security.sh pre
        env:
          CI: true

  # Run tests
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run unit tests
        run: npm run test:unit
        env:
          NODE_ENV: test

      - name: Run integration tests
        run: npm run test:integration
        env:
          NODE_ENV: test

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: pr-tests

  # Build and deploy preview
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [validate, test]
    environment:
      name: preview-${{ github.event.pull_request.number }}
      url: ${{ steps.netlify-deploy.outputs.deploy-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Netlify CLI
        run: npm install -g netlify-cli@latest

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build preview
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_SITE_URL: https://deploy-preview-${{ github.event.pull_request.number }}--judgefinder.netlify.app
          NEXT_PUBLIC_APP_URL: https://deploy-preview-${{ github.event.pull_request.number }}--judgefinder.netlify.app
          NEXT_PUBLIC_APP_NAME: JudgeFinder Platform (Preview)
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          NEXT_TELEMETRY_DISABLED: 1

      - name: Deploy to Netlify
        id: netlify-deploy
        run: |
          deploy_output=$(netlify deploy \
            --site=${{ secrets.NETLIFY_SITE_ID }} \
            --auth=${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --message="Preview for PR #${{ github.event.pull_request.number }}" \
            --alias=pr-${{ github.event.pull_request.number }} \
            --timeout=600)

          deploy_url=$(echo "$deploy_output" | grep -o 'https://[^"]*--judgefinder.netlify.app' | head -1)
          echo "deploy-url=$deploy_url" >> $GITHUB_OUTPUT
          echo "Preview URL: $deploy_url"
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const deployUrl = '${{ steps.netlify-deploy.outputs.deploy-url }}';
            const prNumber = context.issue.number;

            const comment = `## 🚀 Preview Deployment Ready!

            **Preview URL**: ${deployUrl}

            ### Test this preview:
            - ✅ All tests passed
            - ✅ Linting passed
            - ✅ Type checking passed
            - ✅ Security scan passed

            ### Quick links:
            - [Home](${deployUrl})
            - [Judges](${deployUrl}/judges)
            - [Courts](${deployUrl}/courts)

            ---
            *This preview will be updated automatically when you push new commits.*
            `;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Preview Deployment Ready')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }

  # Verify preview deployment
  verify-preview:
    name: Verify Preview
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: deploy-preview

    steps:
      - name: Wait for deployment
        run: sleep 20

      - name: Health check
        run: |
          preview_url="https://deploy-preview-${{ github.event.pull_request.number }}--judgefinder.netlify.app"
          echo "Checking preview at: $preview_url"

          status=$(curl -s -o /dev/null -w "%{http_code}" "$preview_url")
          if [ "$status" -eq 200 ]; then
            echo "✅ Preview is live and responding"
          else
            echo "⚠️ Preview returned status: $status"
            echo "Preview may still be initializing..."
          fi

      - name: Create verification summary
        run: |
          echo "## Preview Verification" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Preview deployment verified" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Preview URL**: https://deploy-preview-${{ github.event.pull_request.number }}--judgefinder.netlify.app" >> $GITHUB_STEP_SUMMARY
